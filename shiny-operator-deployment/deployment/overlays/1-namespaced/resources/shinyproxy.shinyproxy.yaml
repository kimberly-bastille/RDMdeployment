apiVersion: openanalytics.eu/v1
kind: ShinyProxy
metadata:
  name: shinyproxy
  namespace: shinyproxy
spec:
  logging:
    requestdump: true
    level:
      DEBUG
  server:
    secureCookies: true
    frameOptions: sameorigin
    forward-headers-strategy: native
    servlet.session.timeout: 3600
  spring:
    session:
      store-type: redis
    data:
      redis:
        password: ${REDIS_PASSWORD}
        sentinel:
          master: shinyproxy
          password: ${REDIS_PASSWORD}
          nodes: redis-node-0.redis-headless:26379, redis-node-1.redis-headless:26379, redis-node-2.redis-headless:26379
  proxy:
    log-as-json: true
    container-wait-time: 600000000
    store-mode: Redis
    stop-proxies-on-shutdown: false
    title: ShinyProxy
    logoUrl: ""
    landingPage: /
    containerBackend: kubernetes
    kubernetes:
      namespace: shinyproxy
      internal-networking: true
      image-pull-policy: Always
      pod-wait-time: 90000000
    authentication: openid
    openid:
      logout-url: https://login.microsoftonline.com/${TENANT_ID}/oauth2/v2.0/logout
      auth-url: https://login.microsoftonline.com/${TENANT_ID}/oauth2/v2.0/authorize
      token-url: https://login.microsoftonline.com/${TENANT_ID}/oauth2/v2.0/token
      jwks-url: https://login.microsoftonline.com/${TENANT_ID}/discovery/v2.0/keys
      client-id: ${CLIENT_ID}
      userinfo-url: https://graph.microsoft.com/oidc/userinfo
      with-pkce: true
      client-secret: ${CLIENT_SECRET}
    my-apps-mode: Inline
    specs:
      - id: 01_hello
        display-name: Hello Application
        description: Application which demonstrates the basics of a Shiny app
        container-image: ${IMAGE}
        kubernetes-pod-patches: |
          # Add a PVC-backed volume and mount three subfolders into the container
          # Note: if the pod already defines volumes/volumeMounts, switch to using /spec/volumes/- and /spec/containers/0/volumeMounts/-
          - op: add
            path: /spec/volumes
            value:
              - name: app-share
                persistentVolumeClaim:
                  claimName: app-share-pvc
          - op: add
            path: /spec/containers/0/volumeMounts
            value:
              - name: app-share
                mountPath: /srv/rdmtool/saved_regs
                subPath: saved_regs
              - name: app-share
                mountPath: /srv/rdmtool/output
                subPath: output
              - name: app-share
                mountPath: /srv/rdmtool/Data
                subPath: Data
                readOnly: true
          # Ensure the pod runs with UID/GID 999 and has fsGroup 999 to match Azure Files mount options
          # - op: add
          #   path: /spec/securityContext
          #   value:
          #     runAsUser: 999
          #     runAsGroup: 999
          #     fsGroup: 999
          #     fsGroupChangePolicy: OnRootMismatch
  kubernetesPodTemplateSpecPatches: |
    - op: add
      path: /spec/containers/0/env/-
      value:
        name: REDIS_PASSWORD
        valueFrom:
          secretKeyRef:
            name: redis
            key: redis-password
    - op: add
      path: /spec/containers/0/resources
      value:
        limits:
          cpu: 1
          memory: 1Gi
        requests:
          cpu: 0.5
          memory: 1Gi
    - op: add
      path: /spec/serviceAccountName
      value: shinyproxy-sa
  kubernetesServicePatches: |
    - op: add
      path: /metadata/annotations
      value:
        service.beta.kubernetes.io/azure-load-balancer-internal: "true"
        service.beta.kubernetes.io/azure-load-balancer-ipv4: "${LB_PRIVATE_IP}"
    - op: replace
      path: /spec/type
      value: LoadBalancer
  image: openanalytics/shinyproxy:3.2.0
  imagePullPolicy: Always
  fqdn: ${FQDN}